#+STARTUP: showall
* 活动图的内部结构
** 是否需要内部结构的问题?
   + 如果不使用内部结构，其实就是把构建语法直接翻译成绘制实现。相当与直接使用构建语句的 Sexpr 作为内部结构。会影响语法设计的决策。
   + 不使用内部数据结构，间接上，增加自动布局等复杂出来的难度实现的难度，在一个复杂的嵌套结构的语法中，只遍历一次，无法完成空间子嵌套层的空间占用等计算。
   + 内部数据结构，相当与连接问题模型和实现模型中的中间协调模型，同时保存问题模型和实现模型中的数据-如保存自动布局的中间结果。
** 基于控制结构还是基于节点连线?
   + 基于控制结构可以避免非结构化的不规范流程，但现实中的确常常有不规范的流程。
   + 可以通过引用构建非规范结构
* 绘制语法
** 一定是基于构造方式的语法结构？
   + 构造语法的确容易形成，描述性语法。
** 语法结构和内部结构的一致性？
   + 如果考虑一致性，分支箭头上的标签，应该记录在分支结构上，但是这样增加了 reverse-layout 的复杂度。不如记录在 sequnce 结构上。
   + 循环结构，返回分支使用独立的函数构造，
* 原文件结构
** [[file:src/act.core.lisp]] :: 核心模型文件

